{"version":3,"sources":["EventListener.js","App.js","serviceWorker.js","index.js"],"names":["EventListener","this","getListeners","forEach","type","listener","props","eventTarget","addEventListener","removeEventListener","Object","keys","filter","key","startsWith","map","slice","toLowerCase","React","Component","App","state","youtubeurl","time","replayNum","replayDuration","caption","speed","timerRemain","timerRemainTime","onChangeUrl","bind","onChangeTime","onChangeReplayNum","onChangeReplayDuration","onReplay","onReplay5","setTextInputRef","element","textInput","initialFocus","focus","blur","window","scrollTo","timerList","setInterval","remain","getCurrentTime","tremain","Math","trunc","setState","document","activeElement","id","indexOf","getPlayerState","seekTime","localStorage","getItem","parseFloat","e","replace","target","value","loadVideoById","setTimeState","sec","setItem","parseInt","seekTo","clearAllTimer","console","log","playVideo","onReplay5SetInterval","remainNum","num","push","size","newLocal","concat","t","clearInterval","obj","toString","call","event","prototype","nodeType","typeOf","pauseVideo","setPlaybackRate","querySelector","stopPropagation","preventDefault","x","className","keydown","keyProc","style","position","top","left","backgroundColor","width","height","display","gridTemplateColumns","name","ref","onChange","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d6b136d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class EventListener extends React.Component {\n  static propTypes = {\n    eventTarget: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    // イベントの設定\n    this.getListeners().forEach( ( [ type, listener ] ) => {\n      this.props.eventTarget.addEventListener( type, listener );\n    } );\n  }\n\n  componentWillUnmount() {\n    // イベントの設定解除\n    this.getListeners().forEach( ( [ type, listener ] ) => {\n      this.props.eventTarget.removeEventListener( type, listener );\n    } );\n  }\n\n  getListeners() {\n    // propsから、イベント名と関数を抽出\n    let o= Object\n      .keys( this.props )\n      .filter( key => (key.startsWith( 'on' ) || key===\"keydown\" ))\n\t\t\t.map( key => {\n\t\t\t\tif(key.startsWith( 'on' )){\n\t\t\t\t\treturn [ key.slice( 2 ).toLowerCase(), this.props[key] ];\n\t\t\t\t}else{\n\t\t\t\t\treturn [ key, this.props[key] ];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn o;\n  }\n\n  render() {\n    return null; // 何も描画しない\n  }\n}","import React from 'react';\nimport './App.css';\nimport EventListener from './EventListener';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      youtubeurl: \"blb3X5zpdpU\",\n      time: 102,\n      replayNum: 50,\n      replayDuration: 4,\n      caption: true,\n      speed: 1,\n      timerRemain: 0,\n      timerRemainTime: 0\n    }\n    this.onChangeUrl = this.onChangeUrl.bind(this);\n    this.onChangeTime = this.onChangeTime.bind(this);\n    this.onChangeReplayNum = this.onChangeReplayNum.bind(this);\n    this.onChangeReplayDuration = this.onChangeReplayDuration.bind(this);\n\n    this.onReplay = this.onReplay.bind(this);\n    this.onReplay5 = this.onReplay5.bind(this);\n    this.setTextInputRef = element => {\n      this.textInput = element;\n    };\n    this.initialFocus = () => {\n      // Focus the text input using the raw DOM API\n      if (this.textInput) this.textInput.focus();\n      this.textInput.blur();\n      window.scrollTo(0, 0);\n    };\n    this.timerList = []\n  }\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state.timerRemain > 0) {\n        let remain = this.state.time + this.state.replayDuration - window['XXXXX'].getCurrentTime()\n        let tremain = Math.trunc(remain * 10) / 10\n        this.setState({ timerRemainTime: tremain })\n      }\n    }, 200);\n    setInterval(() => {\n      let el=document.activeElement\n      if(el.id===\"reactyoutube\" && [1].indexOf(window['XXXXX'].getPlayerState()) >= 0){\n        this.initialFocus()\n      }\n    }, 3000)\n    let seekTime = localStorage.getItem('react-youtube-seekTime')\n    if (seekTime) {\n      this.setState({ time: parseFloat(seekTime) })\n    }\n  }\n  componentWillUnmount() {\n  }\n  onChangeUrl(e) {\n    const newLocal = e.target.value;\n    const replace = newLocal.replace(/.*=/g, '');\n    this.setState({ youtubeurl: replace, time: 0 }, () => {\n      window['XXXXX'].loadVideoById(this.state.youtubeurl, this.state.time);\n      this.initialFocus()\n    })\n  }\n  onChangeTime(e) {\n    this.setTimeState(parseFloat(e.target.value))\n  }\n\n  setTimeState(sec) {\n    this.setState({ time: sec });\n    localStorage.setItem('react-youtube-seekTime', sec)\n  }\n  onChangeReplayNum(e) {\n    this.setState({ replayNum: parseInt(e.target.value) });\n  }\n  onChangeReplayDuration(e) {\n    this.setState({ replayDuration: parseFloat(e.target.value) });\n  }\n\n  onReplay(e) {\n    window['XXXXX'].seekTo(this.state.time, true);\n    // if ([-1, 0, 2, 5].indexOf(window['XXXXX'].getPlayerState()) >= 0) {\n    //   console.log(\"playvideo\");\n    //   window['XXXXX'].playVideo();\n    // }\n  }\n  onReplay5(e) {\n    this.clearAllTimer()\n    if ([-1, 0, 2, 5].indexOf(window['XXXXX'].getPlayerState()) >= 0) {\n      this.setTimeState(window['XXXXX'].getCurrentTime());\n      console.log(\"playvideo\");\n      window['XXXXX'].playVideo();\n    }else{\n      this.onReplay()\n    }\n    this.setState({ timerRemain: this.state.replayNum - 1 })\n    this.onReplay5SetInterval(this.state.replayNum - 1);\n  }\n  onReplay5SetInterval(remainNum) {\n    let num = 0;\n    this.timerList.push(\n      setInterval(() => {\n        if (this.timerList.size === 0) {\n          //キャンセルされたので何もしない\n          return\n        }\n        console.log(\"onReplay5SetInterval\")\n        const newLocal = this.state.time + this.state.replayDuration;\n        if (window['XXXXX'].getCurrentTime() > newLocal) {\n          console.log(\"clearInterval\")\n          this.clearAllTimer()\n          this.setState({ timerRemain: remainNum })\n          if (remainNum > 0) {\n            this.onReplay();\n            this.onReplay5SetInterval(remainNum - 1);\n          }\n        }\n        //0.1*2000回=200秒間タイマーが続いたら削除\n        if (num++ > 2000) {\n          console.log(\"clearInterval exceed\")\n          this.clearAllTimer()\n        }\n      }, 200)\n    )\n  }\n  clearAllTimer() {\n    this.timerList.concat().forEach(t => {\n      clearInterval(t)\n    })\n    this.timerList = []\n  }\n  typeOf(obj) {\n    return toString.call(obj).slice(8, -1).toLowerCase();\n  }\n  keyProc(key, event) {\n    console.log(key + \" pressed\")\n    console.log(Object.prototype.toString.call(event.target))\n    console.log(event.target.nodeType)\n    console.log(this.typeOf(event.target))\n\n    if (key === \"Escape\") {\n      event.target.blur();\n    }\n    if (this.typeOf(event.target) !== \"htmlbodyelement\") {\n      console.log(\"bodyではないためkeyevent無視\");\n      return;\n    }\n    if (key === \"k\") {\n      console.log(\"state:\" + window['XXXXX'].getPlayerState())\n      //https://developers.google.com/youtube/iframe_api_reference#Playback_status\n      if ([-1, 0, 2, 5].indexOf(window['XXXXX'].getPlayerState()) >= 0) {\n        console.log(\"playvideo\");\n        window['XXXXX'].playVideo();\n      }\n      if ([1].indexOf(window['XXXXX'].getPlayerState()) >= 0) {\n        window['XXXXX'].pauseVideo();\n        this.clearAllTimer()\n        this.setState({ timerRemain: 0, timerRemainTime: 0 })\n      }\n    }\n    if (key === \"c\") {\n      this.setState({ caption: !this.state.caption });\n    }\n    if (key === \"s\") {\n      if (this.state.speed === 1) {\n        window['XXXXX'].setPlaybackRate(0.25)\n        this.setState({ speed: 0.25 });\n      } else {\n        window['XXXXX'].setPlaybackRate(1)\n        this.setState({ speed: 1 });\n      }\n    }\n    if (key === \"r\") {\n      this.clearAllTimer()\n      this.setState({ timerRemain: 0, timerRemainTime: 0 })\n      this.onReplay();\n    }\n    if (key === \"l\") {\n      this.clearAllTimer()\n      this.onReplay5();\n    }\n    if (key === \"t\") {\n      this.setTimeState(window['XXXXX'].getCurrentTime());\n    }\n    if (key === \"h\") {\n      window['XXXXX'].seekTo((window['XXXXX'].getCurrentTime() - 2), true);\n    }\n    if (key === \"j\" || key === \"ArrowLeft\") {\n      window['XXXXX'].seekTo((window['XXXXX'].getCurrentTime() - 1), true);\n    }\n    if (key === \"i\"){\n      document.querySelector('#source').focus()\n      event.stopPropagation()\n      event.preventDefault();\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <EventListener\n          eventTarget={document}\n          keydown={(event) => this.keyProc(event.key, event)}\n        />\n        <div id=\"hidecap\" style={{\n          position: \"absolute\", top: \"390px\", left: \"0px\", backgroundColor: \"#CCCCFF\",\n          width: \"700px\",\n          height: \"120px\",\n          display: (this.state.caption ? \"none\" : \"\")\n        }}></div>\n        <div style={{\n          display: \"grid\",\n          gridTemplateColumns: \"450px 80px 100px\"\n        }}>\n          <div >\n            <input type=\"text\" name=\"youtubeurl\" size=\"20\" ref={this.setTextInputRef} value={this.state.youtubeurl} onChange={this.onChangeUrl}></input>\n            <input type=\"number\" name=\"time\" size=\"20\" value={this.state.time} onChange={this.onChangeTime}></input>\n            <input type=\"number\" name=\"replayNum\" size=\"20\" value={this.state.replayNum} onChange={this.onChangeReplayNum}></input>\n            <input type=\"number\" name=\"replayDuration\" size=\"20\" value={this.state.replayDuration} onChange={this.onChangeReplayDuration}></input>\n            {/* <button type=\"button\" onClick={this.onReplay}>replay</button> */}\n            {/* <button type=\"button\" onClick={this.onReplay5}>replayNum</button> */}\n          </div>\n          <label style={{ display: \"block\" }}>{\"timer残\" + this.state.timerRemain}</label>\n          <label style={{ display: \"block\" }}>{\"時間\" + ((x) => {\n            if (x > 1) {\n              return Math.trunc(x)\n            }\n            if (Math.trunc(x) === x) {\n              return \"\" + x + \".0\";\n            } else {\n              return x;\n            }\n          })(this.state.timerRemainTime)\n          }</label>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('reactyoutube')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}